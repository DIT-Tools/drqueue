#
# THIS IS A TCSH SCRIPT FILE
# 
# Default configuration for mentalray script generator
# You can set the environment variables here (csh style)
# setupenv -ver 3.3 mentalray

#
# For platform dependend environment setting a form like this
# can be used :
#
#
# if ($DRQUEUE_OS == "LINUX") then
#    # Environment for Linux
# else if ($DRQUEUE_OS == "IRIX") then
#    # Environment for Irix
# else
#    # Some error messages
# endif
#

#
# Append mentalray bin to PATH
# SPM_HOST, SI_LINKTAB_LOCATION must be set
#
if ($DRQUEUE_OS == "WINDOWS") then
	setenv PATH "${PATH}:C:\Program Files\Alias\mental ray 3.3\bin"
	#setenv SI_LINKTAB_LOCATION "/mnt/nfs/shared/mi33"
	setenv SPM_HOST "localhost"
else
	setenv PATH "${PATH}:/opt/mi/bin"
	#setenv SI_LINKTAB_LOCATION "${DRQUEUE_RD}"
	#setenv SPM_HOST "license_server"
endif

if ($DRQUEUE_OS == "WINDOWS") then
  set BLOCK=`"$DRQUEUE_BIN/expr.exe" $DRQUEUE_FRAME + $DRQUEUE_BLOCKSIZE - 1`
  set DRQUEUE_SCENE=`"$DRQUEUE_BIN/cygpath.exe" -w "$DRQUEUE_SCENE"`
  set DRQUEUE_RD=`"$DRQUEUE_BIN/cygpath.exe" -w "$DRQUEUE_RD"`
else
  set BLOCK=`expr $DRQUEUE_FRAME + $DRQUEUE_BLOCKSIZE - 1`
endif

if ($BLOCK > $DRQUEUE_ENDFRAME) then
	set BLOCK = $DRQUEUE_ENDFRAME;
endif


if ( ! $?DRQUEUE_RD ) then
	echo Rendering directory is not defined
	exit 1
endif

cd /
echo Changing current working directory to "$DRQUEUE_RD"
cd "$DRQUEUE_RD"
if ( "x`pwd`" == "x/" ) then
	echo Rendering directory "$DRQUEUE_RD" is inadequate
	exit 1
endif

#
# Note: If the mentalrayrender script is not part of your mental ray package, you should be able to
# use the 'ray' command instead.
# example:

if ( ! $?MI_ROOT ) then
		setenv MI_ROOT /opt/mi
endif

echo ray $DRQUEUE_SCENE -render $DRQUEUE_FRAME $BLOCK

ray $DRQUEUE_SCENE -render $DRQUEUE_FRAME $BLOCK


#echo mentalrayrender $DRQUEUE_SCENE -render $DRQUEUE_FRAME $BLOCK

#mentalrayrender "$DRQUEUE_SCENE" -render $DRQUEUE_FRAME $BLOCK

# This should requeue the frame if failed
if ( $? != 0 ) then
	echo "Requeueing frame..."
	kill -INT $$
else
	if ($DRQUEUE_OS != "WINDOWS") then
	  # The frame was rendered properly
	  #${DRQUEUE_ROOT}/bin/chown_block $RF_OWNER $DRQUEUE_RD/$DRQUEUE_IMAGE $DRQUEUE_FRAME $BLOCK
	  # You may or may not want to comment out the 'exit 0' belown depending on how important
	  # you consider changing the files ownership is.
	  #exit 0
	endif
	
	# change userid and groupid
	chown $RF_OWNER $DRQUEUE_RD/*
	
endif

#
# Notice that the exit code of the last command is received by DrQueue
#

#
# THIS IS A TCSH SCRIPT FILE
# 
# Default configuration for maya script generator
# You can set the environment variables here (csh style)
# setupenv -ver 4.0 maya

#
# For platform dependend environment setting a form like this
# can be used :
#
#
# if ($DRQUEUE_OS == "LINUX") then
#    # Environment for Linux
# else if ($DRQUEUE_OS == "IRIX") then
#    # Environment for Irix
# else
#    # Some error messages
# endif
#
# The same structure can be used with the Render command
#
#

# Begin Script
set BLOCK=`expr $FRAME + $BLOCKSIZE - 1`
if ($BLOCK > $ENDFRAME) then
	set BLOCK = $ENDFRAME;
endif

if ( $CUSTOM_CROP ) then
	set crop_args = "-crop $CROP_XMIN $CROP_XMAX $CROP_YMIN $CROP_YMAX";
else
	set crop_args = "";
endif

if ( $CUSTOM_SAMPLES ) then
	set sample_args = "-samples $XSAMPLES $YSAMPLES";
else
	set sample_args = "";
endif

if ( $DISP_STATS ) then
	set stats_args = "-stats";
else
	set stats_args = "";
endif

if ( $VERBOSE ) then
	set verbose_args = "-v";
else
	set verbose_args = "";	
endif

if ( $CUSTOM_RADIOSITY ) then
	set radiosity_args="-radio $RADIOSITY_SAMPLES";
else
	set radiosity_args="";
endif

if ( $CUSTOM_RAYSAMPLES ) then
	set rsamples_args="-rsamples $RAYSAMPLES";
else
	set rsamples_args="";
endif

if ( $CUSTOM_BEEP ) then
	set beep_args="-beep";
else
	set beep_args="";
endif


echo "rendrib -frames $FRAME $BLOCK $crop_args $sample_args $stats_args $verbose_args $radiosity_args $rsamples_args $beep_args $SCENE"

rendrib -frames $FRAME $BLOCK $crop_args $sample_args $stats_args $verbose_args $radiosity_args $rsamples_args $beep_args $SCENE

# This should requeue the frame if failed
if ( $? != 0 ) then
  echo "Requeueing frame..."
  kill -INT $$
else
  # The frame was rendered properly
	# We don't know the output image name. If we knew we could set this correctly
  # chown_block $RF_OWNER $RD/$IMAGE $FRAME $FRAME 
endif

#
# Notice that the exit code of the last command is received by DrQueue
#

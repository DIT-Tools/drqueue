#
# THIS IS A TCSH SCRIPT FILE
# 
# Default configuration for LuxRender script generator
# You can set the environment variables here (csh style)

#
# For platform dependend environment setting a form like this
# can be used :
#
#
# if ($DRQUEUE_OS == "LINUX") then
#    # Environment for Linux
# else if ($DRQUEUE_OS == "IRIX") then
#    # Environment for Irix
# else
#    # Some error messages
# endif
#
# The same structure can be used with the Render command
#
#

umask 0

if ($DRQUEUE_OS == "WINDOWS") then
  set BLOCK=`"$DRQUEUE_BIN/expr.exe" $DRQUEUE_FRAME + $DRQUEUE_BLOCKSIZE - 1`
  set SCENE=`"$DRQUEUE_BIN/cygpath.exe" -w "$SCENE"`
else
  set BLOCK=`expr $DRQUEUE_FRAME + $DRQUEUE_BLOCKSIZE - 1`
endif
if ($BLOCK > $DRQUEUE_ENDFRAME) then
	BLOCK = $DRQUEUE_ENDFRAME;
endif


# try to find out the path of luxconsole
set LUXCONSOLE_PATH=`which luxconsole`

if [ "$LUXCONSOLE_PATH" -eq "" ] then;
	echo "cannot find luxconsole executable!"
fi


# number of threads to use
set THREADS 2

# do a litle bit magic to get the path without frame numbers
set DUMMY=`echo $SCENE | rev | sed -e 's/-/./' | rev`
set DUMMY2=`echo $DUMMY:r:r`

# create new path for current frame
set SCENE_NEW $DUMMY2-`printf "%05d" $FRAME`.lxs


echo $LUXCONSOLE_PATH -t $THREADS $SCENE_NEW

$LUXCONSOLE_PATH -t $THREADS $SCENE_NEW


# This should requeue the frame if failed
if ( $? != 0 ) then
  echo "Requeueing frame..."
  kill -INT $$
else
  #if ($DRQUEUE_OS != "WINDOWS") then
    # The frame was rendered properly
    # We don't know the output image name. If we knew we could set this correctly
    # chown_block $RF_OWNER $RD/$IMAGE $DRQUEUE_FRAME $BLOCK 
  #endif
  
  # change userid and groupid
  # chown 1002:1004 $SCENE:h/*
  
endif

#
# Notice that the exit code of the last command is received by DrQueue
#
